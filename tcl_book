handbook :
ug835-vivado-tcl-commands.pdf
ug894-vivado-tcl-scripting.pdf
https://www.w3cschool.cn/doc_tcl_tk/dict

1.proc
# 例如，定义一个过程，可以计算任意数量的和
proc my_proc {args} {
    set sum 0
    foreach arg $args {
        set sum [expr {$sum + $arg}]
    }
    return $sum
}
set result [my_proc 1 2 3 4 5]
puts "The sum of the numbers is $result."
其中 procedureName 为要创建的过程的名称，{args} 为过程的参数列表，用花括号括起来，多个参数之间用空格分隔。过程体是实现该过程功能的具体代码，可以包含多条 TCL 语句。如果要从过程中返回值，可以使用 return 命令。其中，$result 是将返回的值。
2.set (置换命令可以当作C语言中的赋值来理解，但是又有点不一样，因为这个置换不需要定义类型，可以直接赋值)
set x 10
set y 100 + x    //命令执行后，y的值是“100 + x”而不是我们期望的110

Tcl解释器在分析命令时，把所有的命令参数都当作字符串看待，所以x 被看作了字符串“100 + x”的一部分。如果我们想使用x的值'10' ，就必须告诉Tcl解释器：我们在这里期望的是变量x的值，而非字符'x'。怎么告诉Tcl解释器呢，这就要用到Tcl语言中提供的置换功能。置换可以发生在包括命令名在内的每一个单词中，而且置换可以嵌套。
